[
  {
    "uuid": "0aefece4-b2e5-428b-9df0-1f58ab3109be",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button within the iframe identified by #embedFrame using the selector #search-input.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#embedFrame",
          "selector": "#search-input"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fd776692-2181-45cb-9a5f-f1d335298136",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button inside the iframe identified by #iframeResult using the selector .submit-btn.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeResult",
          "selector": ".submit-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "67364120-c816-4d5f-8691-9b86a973e499",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the password field in the iframe with the ID 'iframeContent' with the value 'password123'.",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeContent",
          "selector": "#password",
          "value": "password123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "17ed254e-068f-4b29-ba90-d6468c68fb4e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the .search-input element inside the iframe identified by #externalFrame with the text 'Search Keywords'.",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#externalFrame",
          "selector": ".search-input",
          "value": "Search Keywords"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "40133820-bdc2-4bc9-b003-9503d3ab72f9",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the element with ID 'comment-box' inside the iframe with ID 'embedFrame' with the text 'This is a test comment.'",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#embedFrame",
          "selector": "#comment-box",
          "value": "This is a test comment"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "eeff8b1d-99ef-4cca-8ae4-3c666045b375",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector .login-btn on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_hover",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5285fe63-c35e-4995-8cff-fa4ef72991d8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector #checkout-btn on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_hover",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#checkout-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "6879542e-fc22-46c9-9110-36f1b78833b0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code console.log('hello world') in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "console.log('hello world')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "0adc5e13-98a1-4718-935b-c53c1920ceef",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'document.title' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "document.title"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a75e3a7c-99b6-4c6c-ba92-f02909028d50",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute JavaScript code alert('test') in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "alert('test')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "87effd85-b18e-4436-a840-70d443082be1",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the value New York from the dropdown with the selector .city-select.",
    "function_call_label": [
      {
        "name": "playwright_select",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_select",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".city-select",
          "value": "New York"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "947e5636-2c9e-42e0-a988-769dc3ddb627",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select 'English' from the dropdown with the selector #languageSelect.",
    "function_call_label": [
      {
        "name": "playwright_select",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_select",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#languageSelect",
          "value": "English"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "394a745e-4f97-4247-9474-4643108f7894",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select 'United States' from the dropdown menu with the selector #countryDropdown.",
    "function_call_label": [
      {
        "name": "playwright_select",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_select",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#countryDropdown",
          "value": "United States"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7b90943a-b1f1-4843-9182-8e90d462cc32",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector #main-header on the page and name it header_screenshot.",
    "function_call_label": [
      {
        "name": "playwright_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_screenshot",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "name": "header_screenshot",
          "selector": "#main-header"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fe6da312-6b10-49cf-9d44-9bec31d9de22",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector .content on the page and name it content_screenshot.",
    "function_call_label": [
      {
        "name": "playwright_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_screenshot",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "name": "content_screenshot",
          "selector": ".content"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ceba0ffd-b3c4-40f1-8a73-ba71a2f1242b",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector '.product-item img' on the page and save it as 'product_image_screenshot'.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "product_image_screenshot",
          "selector": ".product-item img"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a747909e-f182-4fb8-8961-66297a2f6d00",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector #main-banner on the page and save it as homepage_screenshot.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "homepage_screenshot",
          "selector": "#main-banner"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7946c715-6653-41d3-b1aa-501276443252",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector '.login-btn' on the page and save it as 'login_button_screenshot'.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "login_button_screenshot",
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "194bc944-478d-406b-ad0a-66d625a1494d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the submit button inside the iframe on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": ".iframe-container iframe",
          "selector": ".submit-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c3bdc960-6ed6-4aea-8f59-4292828562d8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the selector #loginButton inside the iframe with the selector #iframeResult on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeResult",
          "selector": "#loginButton"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ef364e8d-3764-4ef5-b5b2-a220678d4153",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the selector #searchInput inside the iframe with the selector #externalFrame on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#externalFrame",
          "selector": "#searchInput"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ddd9cbd9-b689-46a1-bdd3-270113a38b06",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag the element with the selector #slider to the target with the selector #slider-end?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#slider",
          "targetSelector": "#slider-end"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bbabb454-902f-4266-a7a1-fd2ff2af570d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag the element with selector #item1 to the target with selector #container?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#item1",
          "targetSelector": "#container"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "052b6ddd-3b37-4687-b77e-1f9fe0345762",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "End the code generation session with ID session123 and generate the test file.",
    "function_call_label": [
      {
        "name": "end_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "729ef6ee-6b29-4087-9996-7331415016c4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "End the code generation session with ID prodSession002 and generate the test file.",
    "function_call_label": [
      {
        "name": "end_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "prodSession002"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a4272bd5-9795-4bb0-a1fb-98745db6ebc7",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element from the source box to the target box on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".source-box",
          "targetSelector": ".target-box"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7d31f202-029c-40b9-b537-4b2ee79adfc2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element from one location to another on a webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#elementToMove",
          "targetSelector": "#destination"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "48f4c36d-3806-4deb-a8e8-2915181140f7",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.qq.com using the Chromium browser.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.qq.com",
          "browserType": "chromium"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ea38b434-1a6d-4079-b9d2-614e6dbf889b",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.jd.com using the browser webkit.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.jd.com",
          "browserType": "webkit"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "3e412bf1-612f-49de-b7ed-5604ee2a7724",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Perform an HTTP PUT request to https://www.sample.com/submit with the data example@example.com.",
    "function_call_label": [
      {
        "name": "playwright_put",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.sample.com/submit",
          "value": "example@example.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "9b0eabaf-7a95-4f91-90ef-87c8affe083f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field identified by #phone with the value 13800138000.",
    "function_call_label": [
      {
        "name": "puppeteer_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_fill",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#phone",
          "value": "13800138000"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ec06cd73-6cce-415b-ac38-13a1b3241cec",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field with the ID '#password' with the value 'password123'.",
    "function_call_label": [
      {
        "name": "puppeteer_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_fill",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#password",
          "value": "password123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "40b7428b-f571-41e2-81d1-3a2f80e5cacf",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field labeled as username with the value testuser.",
    "function_call_label": [
      {
        "name": "puppeteer_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_fill",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#username",
          "value": "testuser"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e036dea4-40d7-4329-af62-c05b4ae276cd",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.baidu.com using the browser chromium.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.baidu.com",
          "browserType": "chromium"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c4f2fa6f-5b8c-4aea-8496-b6a8a2a9dd97",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.taobao.com using the Firefox browser.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.taobao.com",
          "browserType": "firefox"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d398fd6f-0b44-4578-b7fb-e27af4f7a911",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Perform an HTTP GET request to retrieve data from https://www.baidu.com.",
    "function_call_label": [
      {
        "name": "playwright_get",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.baidu.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "6d8a2831-12a6-4ea0-9a34-d1ec65069b1a",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the option with the value 'US' from the dropdown menu identified by '#countryDropdown'.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#countryDropdown",
          "value": "US"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "48d72f27-5177-4b70-b8a4-977e31b5b304",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the option with the value 'dark' from the dropdown menu identified by #themeSelector.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#themeSelector",
          "value": "dark"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8ffaea23-b1e5-4b36-a109-5c7c415e8553",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the USD option from the currency dropdown menu.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#currencySelect",
          "value": "USD"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5a2c6335-1975-430a-b642-698be5518fb1",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Enter 'search query' into the search input field.",
    "function_call_label": [
      {
        "name": "puppeteer_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_fill",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": ".search-input",
          "value": "search query"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "999c9428-3b8a-46e1-9b9e-616a10dc7ee7",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click on the element with the selector .login-btn.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e055e152-bf1d-45a7-8f45-84d89f9531f0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click on the element with the selector #submit-button.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#submit-button"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ca0cb33b-04e0-4d82-b250-9db7a8282a9e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click on the element with the selector #footer-links .contact-us.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#footer-links .contact-us"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "71e3928b-7bdc-4e7d-b8d2-a289e01b408e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the GMT option from the dropdown menu identified by #timeZoneSelect.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#timeZoneSelect",
          "value": "GMT"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8f5dfc9a-fa1c-4719-9b5c-f4c3a2cc8e65",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the option with the value 'Blue' from the dropdown identified by #colorOptions.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#colorOptions",
          "value": "Blue"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "20759686-4038-4906-a0bd-3a65d609d086",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the option with the value 'English' from the dropdown menu identified by #languageSelect.",
    "function_call_label": [
      {
        "name": "puppeteer_select",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_select",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#languageSelect",
          "value": "English"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8bd654f1-1cc1-41ab-9635-ad6f2ca76913",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Enter key on the element identified by #submit-btn.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Enter",
          "selector": "#submit-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ff992a44-f9f4-4a65-b895-d2665b3b1468",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Escape key on the element identified by #modal-close.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Escape",
          "selector": "#modal-close"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e32001ec-8d37-4855-a135-cf9e679de5c0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Tab key on the element identified by .login-input.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Tab",
          "selector": ".login-input"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8a98aa9f-e59e-426e-a73a-5df4a1523253",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you perform an HTTP GET request on https://www.qq.com?",
    "function_call_label": [
      {
        "name": "playwright_get",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.qq.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "96aaa4aa-b7da-4484-a979-b924b749448e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element with the class 'item-to-move' to the target location with the class 'target-area' on a webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".item-to-move",
          "targetSelector": ".target-area"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1ef41af9-2481-4462-9c7a-dbba164348be",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag the element with the class 'drag-handle' to the target location with the class 'drop-zone' on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".drag-handle",
          "targetSelector": ".drop-zone"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "93611a8c-8b4f-404a-826b-c9ef340d88fb",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the CSS selector #main-nav on the page?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "42adf707-2930-47e8-9159-89eed1928201",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the CSS selector .login-btn on the page?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "91ab09b8-9ad1-49ae-b140-1c72c7e13c0c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute JavaScript code to scroll to the bottom of the page in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "window.scrollTo(0, document.body.scrollHeight)"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d23dd375-0285-4603-babb-9bb9e5b7400d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with the output path set to /var/www/tests, a test name prefix of SampleTest, and include comments set to False.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/var/www/tests",
            "testNamePrefix": "SampleTest",
            "includeComments": "False"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d7a94f27-261e-4962-9ba4-9f818e1298fc",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with the output path set to /usr/local/tests, using 'MyTest' as the test name prefix, and set include comments to False.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/usr/local/tests",
            "testNamePrefix": "MyTest",
            "includeComments": "False"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c2ac8b81-e908-498a-beec-93ff3ebc920f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with the output path set to /opt/tests, test name prefix as GeneratedTest, and include comments set to True.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/opt/tests",
            "testNamePrefix": "GeneratedTest",
            "includeComments": "True"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "aa15ad48-a00a-4095-ac28-6cc0e01adc6f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.jd.com using Puppeteer.",
    "function_call_label": [
      {
        "name": "puppeteer_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_navigate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "url": "https://www.jd.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7cab32b7-c5fb-473f-b20d-e34042d544e4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.baidu.com using Puppeteer.",
    "function_call_label": [
      {
        "name": "puppeteer_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_navigate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "url": "https://www.baidu.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "b72f6695-c67b-401d-8369-9edc35d60ac4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute JavaScript code to change the page title to 'New Page Title'.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "document.title = 'New Page Title'"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f28225c7-7fc2-40ae-9b73-cd13081fb649",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute JavaScript code to change the webpage title to 'Dynamic Title Change'.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "document.title = 'Dynamic Title Change'"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "81be78de-6d54-428e-89d9-fa339468ffd5",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Tab key on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Tab"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "3c36a967-7828-4d2b-8514-7c78b2588ae6",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Escape key on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Escape"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "81e5e538-513a-4934-9e87-dde5df4f7a9a",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Enter key on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Enter"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f75b0e53-25a3-4aed-b0fc-0efedb4a1055",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Capture a screenshot of the element identified by the class 'product-image' on the page and name it product_image_snap.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "product_image_snap",
          "selector": ".product-image"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "65c60186-51e5-49ab-be43-0322139c3280",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Capture a screenshot of the element identified by the class 'login-btn' on the page and name it 'login_button_capture'.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "login_button_capture",
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "65bad570-2257-45ef-a2dd-85112365cff5",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Capture a screenshot of the element identified by #main-banner on the webpage and save it as homepage_screenshot.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "homepage_screenshot",
          "selector": "#main-banner"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1448bdc4-a9a2-409f-b938-5b262b4c92f8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I simulate pressing the down arrow key on a webpage?",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "ArrowDown"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "dad5d630-b283-49c1-9afe-5e1fe89655ce",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I simulate pressing the Space key on a webpage?",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Space"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "b313f530-41fd-45cf-8a88-63e66207fe8c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I simulate pressing the Escape key on a webpage?",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Escape"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bb9c9e6a-5929-4e35-965b-872fdc61915f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the element from the start point to the end point on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#startPoint",
          "targetSelector": "#endPoint"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bdb9b739-26e7-4eb3-a203-9a8e03fbdf29",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the element from the dragElement section to the dropArea section on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#dragElement",
          "targetSelector": "#dropArea"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "65c91ae8-582e-4269-888c-39a67b3129af",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the element from the source box to the target box on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#sourceBox",
          "targetSelector": "#targetBox"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "aaf0ad28-3efe-42f6-b034-b2435e0c32a6",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button with the CSS selector #checkout-btn on the webpage.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#checkout-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d1bff559-d941-4578-9ce7-6f9abf09354d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the element with the CSS selector #main-nav on the webpage.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ac6e0ac3-0160-418b-9933-4fbc32a943de",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I click on the submit button within the iframe on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeContent",
          "selector": "#submit-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1252f830-633d-4a59-aeb6-aab161ed657a",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I click on the element with the class 'search-input' within the iframe that has the class 'iframe-container' on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": ".iframe-container iframe",
          "selector": ".search-input"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "352eab7d-46e8-4649-9bd1-29fdc4c97e0f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field with class .login-btn inside the iframe with class .iframe-container iframe with the value '测试数据'.",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": ".iframe-container iframe",
          "selector": ".login-btn",
          "value": "测试数据"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "75df6eab-163c-4445-b0f3-01afa4d8e1ec",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the password field within the iframe identified by #iframeContent with the value password123.",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeContent",
          "selector": "#password",
          "value": "password123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e418f67e-5a77-4072-8f59-1368ac06cf5d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field with class .search-input inside the iframe with ID #externalFrame with the value example@example.com.",
    "function_call_label": [
      {
        "name": "playwright_iframe_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#externalFrame",
          "selector": ".search-input",
          "value": "example@example.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1f4a53f9-0865-4ea3-80d5-be1251185548",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'alert(\"Hello World!\")' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "alert('Hello World!')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "93f8315e-6c1e-4d71-b1bf-6a1bd3595770",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'document.title' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "document.title"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "3fcd48e3-e451-40f5-b4c1-899d3c1aa4d1",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'document.querySelector('button').click()' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "document.querySelector('button').click()"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "efa288f3-e94b-4504-83ec-bd053326e7b6",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'document.title' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "document.title"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "dd9e7381-64cd-42a4-b50a-1c0adffc5ab8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'window.scrollTo(0, document.body.scrollHeight)' in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "window.scrollTo(0, document.body.scrollHeight)"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "27d603c0-3f3c-4a94-9a75-cb748913c092",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Set the browser's User Agent to Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0.",
    "function_call_label": [
      {
        "name": "playwright_custom_user_agent",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "063aa289-073c-45d3-a756-01076eba686b",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Set the browser's User Agent to Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3.",
    "function_call_label": [
      {
        "name": "playwright_custom_user_agent",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "91ff98d9-f030-40bb-ad2e-6896d9eec69c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button inside the iframe identified by the selector #externalFrame with the class .add-to-cart.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#externalFrame",
          "selector": ".add-to-cart"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e39d1a66-f6e9-4686-a91e-6fdb54ccb15d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button inside the iframe identified by #iframeResult with the selector .submit-btn.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeResult",
          "selector": ".submit-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "0a96d40b-4c09-4f8b-ac23-c7b1c228c894",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the button inside the iframe identified by #iframeContent with the selector .login-btn.",
    "function_call_label": [
      {
        "name": "playwright_iframe_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "iframeSelector": "#iframeContent",
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d82ed220-1a66-4b5c-9fd1-e7fc31057386",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the element with the selector #nav-home on the page.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#nav-home"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "91a58512-978a-4293-be2c-d76cbd22e83e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the element with the selector #submit-button on the page.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#submit-button"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d4486054-f58a-4cd1-8698-55b9e062eada",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the checkout button on the page.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#checkout-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "4094a8c1-6cf3-4b8e-996b-50737ab976d5",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the selector #login-button on the webpage.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#login-button"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7315917c-2c98-47c9-80a4-98626a4e9e04",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the selector #subscribe-now on the webpage.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#subscribe-now"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1736f391-a31c-44ae-8414-37ab85b5839c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the selector .submit-form on the webpage.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": ".submit-form"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "dac90185-88b5-4179-b831-8f82791cac06",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the ArrowDown key on the element with the selector #main-nav.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "ArrowDown",
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "00d8a44b-e4cb-41f0-9c07-aae59a2c3770",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Escape key on the element identified by the class .dropdown-menu.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Escape",
          "selector": ".dropdown-menu"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "eb6c24b1-e11a-40c3-bc7e-42a6e64a69ab",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the element with the selector .login-btn on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c689a568-ec4d-4ea6-86f9-1dc77506af72",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the element with selector #contact-form on the webpage.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#contact-form"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "3a9b097c-ff53-4724-81d6-f24f721d85b2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector .login-btn on the page?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "4d78fa94-baf8-4fee-8bc7-c13a43699d4d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector #main-nav on the page?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "1868e3fd-5194-465e-a04a-50bd2f89ba6d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the element from the handle to the target area on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".handle",
          "targetSelector": ".target-area"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "6ee65916-c6c3-4cab-9cf1-fbd787d910aa",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you move the element from dragItem to dropZone on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#dragItem",
          "targetSelector": "#dropZone"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ee660729-3398-496b-aa19-e67d210ae957",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you move the element from the slider to the end point on the webpage?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#slider",
          "targetSelector": "#endPoint"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "256ed395-a80e-4aa3-8b9b-15d3d7245eff",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Set the browser's User Agent to Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36.",
    "function_call_label": [
      {
        "name": "playwright_custom_user_agent",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "userAgent": "Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Mobile Safari/537.36"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a8298bf9-fd62-4a68-a920-7c199604744b",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Set the browser's User Agent to mimic an iPhone running iOS 14 using Safari.",
    "function_call_label": [
      {
        "name": "playwright_custom_user_agent",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "userAgent": "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "02bd6f2e-7177-4049-b394-05ce60b768d0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Set the browser's User Agent to Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36.",
    "function_call_label": [
      {
        "name": "playwright_custom_user_agent",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "userAgent": "Mozilla/5.0 (Linux; Android 10; SM-G973F) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bfeeb12a-abbb-4be8-aa5f-f6ef7a52df54",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field identified by .comment-box with the value 这是测试文本.",
    "function_call_label": [
      {
        "name": "playwright_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_fill",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".comment-box",
          "value": "这是测试文本"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "47d8bf8f-48f3-4410-ba4e-69199a412bd2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the link identified by the selector .news-item and switch to the new tab.",
    "function_call_label": [
      {
        "name": "playwright_click_and_switch_tab",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "selector": ".news-item"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7ab0d624-c3ad-46a9-ac68-18479a4d4186",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the link with selector #main-nav and switch to the new tab.",
    "function_call_label": [
      {
        "name": "playwright_click_and_switch_tab",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d294cdc1-3a68-4afb-bbe0-b77ff928389e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Click the link with the .video-player selector and switch to the new tab.",
    "function_call_label": [
      {
        "name": "playwright_click_and_switch_tab",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "selector": ".video-player"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "9c65ea91-a9d1-4aae-828e-c33bffaa74aa",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you clear the code generation session with ID session_67890?",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session_67890"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "377db51a-7acc-4f66-90eb-dee85fd8d949",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you clear the code generation session with ID session_12345?",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session_12345"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "2d1f3d1b-4389-4d8c-af12-cd6792cc3bbd",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you provide details about the code generation session with ID 789xyz?",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "789xyz"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "acdbfc5f-9237-42bc-9b1f-f79805417926",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you provide details about the code generation session with ID session123?",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "b35f8c97-b4be-453d-aa72-15fce8de088b",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code 'window.scrollTo(0, document.body.scrollHeight)' in the browser console.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "window.scrollTo(0, document.body.scrollHeight)"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fed001ba-e3dd-4b5f-8b8c-fb652262adc5",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Drag the element from .draggable to .drop-zone.",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".draggable",
          "targetSelector": ".drop-zone"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "85c469d0-db4d-4a7c-b083-dcda309548d1",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Drag the element from #element1 to #element2.",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#element1",
          "targetSelector": "#element2"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "4872b322-2814-40d0-84a2-57edf151641a",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute JavaScript code 'console.log('hello world')' in the browser console.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "console.log('hello world')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bb96ebd3-0379-4d7d-8b39-e0813bee5736",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code alert('test') in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "alert('test')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "30d44cc9-e2b8-4c6a-93f4-c40f443b041e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code window.scrollTo(0, document.body.scrollHeight) in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "window.scrollTo(0, document.body.scrollHeight)"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fd346be5-4c3b-4e0f-b078-5ae8bf04c2f7",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the JavaScript code console.log('hello world') in the browser console.",
    "function_call_label": [
      {
        "name": "playwright_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_evaluate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "script": "console.log('hello world')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d72f9be6-1c14-446c-bab3-d19b95598cd8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Perform an HTTP DELETE request on the URL https://www.testsite.com/delete/789.",
    "function_call_label": [
      {
        "name": "playwright_delete",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.testsite.com/delete/789"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f1f960b9-7bd1-46e6-84b2-59eeebd3ab61",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from the URL https://www.jd.com with the identifier response3.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response3",
          "url": "https://www.jd.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "2ff9fa32-a50d-4277-b8f1-1c36e7cf588e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from the URL https://www.taobao.com with the identifier response2.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response2",
          "url": "https://www.taobao.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "40c11156-2233-4332-beeb-30973386a9fa",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please clear the code generation session with ID sessionABCDE.",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "sessionABCDE"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "eba48a06-c8b6-4054-b2f9-16e5f206a0e6",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please clear the code generation session with ID sessionXYZ12.",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "sessionXYZ12"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fa5817ce-c273-4f77-8b68-bda1e6b8e095",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Drag the element from the drag source to the drop target.",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".drag-source",
          "targetSelector": ".drop-target"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "aa229cd6-54fe-4a3e-aaa4-4fb60874c35d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Drag the element from #sourceElement to #destinationElement.",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#sourceElement",
          "targetSelector": "#destinationElement"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "742eca71-6c66-4750-a10f-b7ec033751ec",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Drag the element from the start position to the end position.",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#startDrag",
          "targetSelector": "#endDrop"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "735a8f86-14e0-40c8-bc64-d9a927a6a9e8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with output path /opt/tests/playwright and test name prefix SearchTest.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/opt/tests/playwright",
            "testNamePrefix": "SearchTest"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "37304d53-418c-4351-a8cf-d0b49a3bbff3",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with the output path set to /var/www/tests and the test name prefix as RegistrationTest.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/var/www/tests",
            "testNamePrefix": "RegistrationTest"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7a8e7658-7c08-4610-a148-f50175a4fc38",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a new code generation session with output path /Users/testuser/projects/tests and test name prefix UserTest.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/Users/testuser/projects/tests",
            "testNamePrefix": "UserTest"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "30b7b39d-3bcc-4cd1-9256-f3278ff78e63",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you move the element from .card to #deck?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".card",
          "targetSelector": "#deck"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f50ea972-6d01-4069-b152-c2496db97cf7",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the file icon to the trash bin?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#fileIcon",
          "targetSelector": "#trashBin"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "0475e400-14fc-403b-9c60-372d5659355e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you drag the element from #item1 to #cart?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#item1",
          "targetSelector": "#cart"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c976c7c7-829c-49d8-bd46-3c5081ef579d",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Tab key on the webpage element with the class selector .login-btn.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Tab",
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "af2e6c40-4814-4c5b-84af-d361ee640469",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Press the Escape key on the webpage element identified by the selector #modalFrame.",
    "function_call_label": [
      {
        "name": "playwright_press_key",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "key": "Escape",
          "selector": "#modalFrame"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "3dfa2917-d27f-4211-9dca-3686b5234546",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please clear the code generation session with ID session67890.",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session67890"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "862d2592-a17b-4a62-82cb-0318ae080fcc",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please clear the code generation session with ID sessionKLMNO.",
    "function_call_label": [
      {
        "name": "clear_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "sessionKLMNO"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bbb1dc51-2a2c-4662-9db2-fb4c6b0e4176",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select the GMT value from the dropdown with the selector .timezone-select.",
    "function_call_label": [
      {
        "name": "playwright_select",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_select",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".timezone-select",
          "value": "GMT"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "77c362d6-e05b-4425-9b42-58460de74b83",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Select 'USA' from the dropdown menu with the selector #countryDropdown.",
    "function_call_label": [
      {
        "name": "playwright_select",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_select",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#countryDropdown",
          "value": "USA"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f55a6049-dd39-488f-ae26-21702b9755bd",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Retrieve details for the code generation session with ID session67890.",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session67890"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "9f00d31c-f7ae-4ed2-abe8-aff2d436c676",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the script console.log('hello world') in the browser console.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "console.log('hello world')"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ac9cf055-c334-4089-96a2-df9a7aa26216",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the script window.scrollTo(0, document.body.scrollHeight) in the browser console.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "window.scrollTo(0, document.body.scrollHeight)"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ab7be7d4-0110-41a1-9384-69caca274e01",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Execute the script 'document.title' in the browser console.",
    "function_call_label": [
      {
        "name": "puppeteer_evaluate",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_evaluate",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "script": "document.title"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a12aab41-83b8-473c-accb-388c1984bcc2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fetch the content from the URL https://www.qq.com using an HTTP GET request.",
    "function_call_label": [
      {
        "name": "playwright_get",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.qq.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "fa7b77f3-1a68-410f-bc18-6a9edfeff859",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fetch the content from the URL https://www.sina.com.cn using an HTTP GET request.",
    "function_call_label": [
      {
        "name": "playwright_get",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.sina.com.cn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f853db12-bc4c-40e9-8bf8-4dc9f131b417",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element from .card to .deck?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".card",
          "targetSelector": ".deck"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "963d8e96-6059-44f2-a1d9-382075253b89",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element from the slider thumb to the slider track?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": "#slider-thumb",
          "targetSelector": "#slider-track"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5959d0eb-ce22-460a-ac87-6f45bfe23610",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "How can I drag an element from the .icon class to the .icon-target class?",
    "function_call_label": [
      {
        "name": "playwright_drag",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sourceSelector": ".icon",
          "targetSelector": ".icon-target"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8597e78b-0ed8-4d26-9d13-4b7c7b5c473e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with the class 'login-btn' on the page.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "095a4adc-14c4-495d-aebf-1321efec5376",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click the element with selector #checkout-btn on the page.",
    "function_call_label": [
      {
        "name": "playwright_click",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_click",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "selector": "#checkout-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "d72beb43-2887-44cf-af6e-9c5076347e84",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click on the element with the selector #main-nav on the page.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "0d85a8cb-c8f9-4a08-8866-55053aece7dc",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please click on the submit button on the page.",
    "function_call_label": [
      {
        "name": "puppeteer_click",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_click",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#submit-button"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "2940a107-8f51-43a4-a6fb-61e8926c3a3f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the footer links element on the page and name it footer_screenshot.",
    "function_call_label": [
      {
        "name": "playwright_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_screenshot",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "name": "footer_screenshot",
          "selector": "#footer-links"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "b709d15f-bf14-4015-812f-3ce3fcbb3e91",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the ID 'main-header' on the page and name it 'header_screenshot'.",
    "function_call_label": [
      {
        "name": "playwright_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_screenshot",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "name": "header_screenshot",
          "selector": "#main-header"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8ffb7585-bb8a-4675-9a88-b8ee30e583e4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the class 'login-btn' on the webpage and name it 'login_button_screenshot'.",
    "function_call_label": [
      {
        "name": "playwright_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_screenshot",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "name": "login_button_screenshot",
          "selector": ".login-btn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "8679745b-b4a5-468b-b2d6-d0757a5fe290",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from the URL https://www.baidu.com with the identifier response1.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response1",
          "url": "https://www.baidu.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "7be57af9-3782-4360-a75d-1b9497ada732",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from the URL https://www.qq.com with the identifier response3.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response3",
          "url": "https://www.qq.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ca79a1cd-c1b0-4533-82aa-18090b32a1b4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from the URL https://www.sina.com.cn with the identifier response4.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response4",
          "url": "https://www.sina.com.cn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5b584614-f920-4f1f-8bbd-3b6c7af8b0bb",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector #main-header on the page and name it homepage_screenshot.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "homepage_screenshot",
          "selector": "#main-header"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "378febe9-5021-4ffd-af4b-a206ea083550",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the footer element on the page and name it footer_screenshot.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "footer_screenshot",
          "selector": "#footer"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ebd863df-59ee-4d86-9c30-7fffb843b87f",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Take a screenshot of the element with the selector .user-avatar on the page and name it profile_picture_screenshot.",
    "function_call_label": [
      {
        "name": "puppeteer_screenshot",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_screenshot",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "name": "profile_picture_screenshot",
          "selector": ".user-avatar"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "429fc707-5c58-4b9e-a0a8-c91175e547b9",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website www.baidu.com using the Chromium browser.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.baidu.com",
          "browserType": "chromium"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "843c1587-93c7-4ae4-96c3-ecade93441b0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.qq.com using the Chromium browser.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.qq.com",
          "browserType": "chromium"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "53b1ebc8-f82e-4735-b804-3c0cf78f5872",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.jd.com using the browser type webkit.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.jd.com",
          "browserType": "webkit"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e9aed31f-fed1-4af2-b8ef-b96495a812b2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector #main-nav on the webpage?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#main-nav"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "50194534-2d07-4147-9c7e-830a54d35482",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Can you hover over the element with the selector #footer-links on the webpage?",
    "function_call_label": [
      {
        "name": "puppeteer_hover",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_hover",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": "#footer-links"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "961708e6-7b7c-4e47-9002-269c677459b0",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Perform an HTTP DELETE request on the URL https://www.sample.com/api/v1/remove/123.",
    "function_call_label": [
      {
        "name": "playwright_delete",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "url": "https://www.sample.com/api/v1/remove/123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "499fa277-24fe-4660-9ff6-d76462dc9a7c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from https://www.qq.com with identifier response4.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response4",
          "url": "https://www.qq.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "b94d391c-fcf3-4900-84c9-338a3596088e",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from https://www.sina.com.cn with identifier response5.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response5",
          "url": "https://www.sina.com.cn"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "e1f1ad73-a9c5-4968-9c0c-88cee2c4a97c",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start waiting for an HTTP response from https://www.baidu.com with identifier response1.",
    "function_call_label": [
      {
        "name": "playwright_expect_response",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "id": "response1",
          "url": "https://www.baidu.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ef4ac406-1780-4364-b7cb-6f8d32dfbfc5",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a code generation session with the output path set to /mnt/data/playwright and the test name prefix as ProfileUpdateTest.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/mnt/data/playwright",
            "testNamePrefix": "ProfileUpdateTest"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "ac48bd01-479f-4163-9299-102a44206d56",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Start a code generation session with the output path set to /home/user/tests and the test name prefix as CheckoutTest.",
    "function_call_label": [
      {
        "name": "start_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "options": {
            "outputPath": "/home/user/tests",
            "testNamePrefix": "CheckoutTest"
          }
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5de80027-ea8f-479a-abf3-440659f43afe",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Retrieve information for code generation session with ID session001",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session001"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "a3daadf2-dba5-4a6c-a44e-cd3c1ec798f6",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Retrieve information for the code generation session with ID session123",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session123"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "931772c9-97da-4732-bebb-1281d6ce1705",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please end the code generation session with session ID session_001.",
    "function_call_label": [
      {
        "name": "end_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session_001"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c681e3a8-a8cd-4858-8bb3-b5807e1651ed",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please end the code generation session with session ID session_2023.",
    "function_call_label": [
      {
        "name": "end_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session_2023"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "2007c9fc-358f-4370-bebe-047970a426d8",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Please end the code generation session with session ID testSession42.",
    "function_call_label": [
      {
        "name": "end_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "testSession42"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "c245f2d4-7f6a-40b3-9001-70b4d075f251",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "What is the information about the code generation session with ID session2023?",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "session2023"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "bf09825e-f452-4d2b-8449-ee446d3bd7eb",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "What is the information about the code generation session with ID codegen456?",
    "function_call_label": [
      {
        "name": "get_codegen_session",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [],
        "input": {
          "sessionId": "codegen456"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f3b6253e-c353-4553-9454-cf0a40eda1d2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Fill the input field identified by .search-input with the value 搜索关键词.",
    "function_call_label": [
      {
        "name": "puppeteer_fill",
        "step": "1",
        "id": "1",
        "mcp_server": "puppeteer",
        "similar_tools": [
          {
            "name": "playwright_fill",
            "mcp_server": "playwright"
          }
        ],
        "input": {
          "selector": ".search-input",
          "value": "搜索关键词"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "f398dc39-a07b-4950-8df4-9c2db95c30c2",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website https://www.baidu.com using Playwright.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.baidu.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  },
  {
    "uuid": "5f4d5432-6005-4243-9d9f-6e4fd747e9f4",
    "category": "browser",
    "call_type": "single",
    "tools": [
      {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions",
        "input_schema": {
          "type": "object",
          "properties": {
            "options": {
              "type": "object",
              "description": "Code generation options",
              "properties": {
                "outputPath": {
                  "type": "string",
                  "description": "Directory path where generated tests will be saved (use absolute path)"
                },
                "testNamePrefix": {
                  "type": "string",
                  "description": "Prefix to use for generated test names (default: 'GeneratedTest')"
                },
                "includeComments": {
                  "type": "boolean",
                  "description": "Whether to include descriptive comments in generated tests"
                }
              },
              "required": [
                "outputPath"
              ]
            }
          },
          "required": [
            "options"
          ]
        }
      },
      {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to end"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to retrieve"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test",
        "input_schema": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "ID of the session to clear"
            }
          },
          "required": [
            "sessionId"
          ]
        }
      },
      {
        "name": "playwright_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to the website specified"
            },
            "browserType": {
              "type": "string",
              "description": "Browser type to use (chromium, firefox, webkit). Defaults to chromium",
              "enum": [
                "chromium",
                "firefox",
                "webkit"
              ]
            },
            "width": {
              "type": "number",
              "description": "Viewport width in pixels (default: 1280)"
            },
            "height": {
              "type": "number",
              "description": "Viewport height in pixels (default: 720)"
            },
            "timeout": {
              "type": "number",
              "description": "Navigation timeout in milliseconds"
            },
            "waitUntil": {
              "type": "string",
              "description": "Navigation wait condition"
            },
            "headless": {
              "type": "boolean",
              "description": "Run browser in headless mode (default: false)"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "storeBase64": {
              "type": "boolean",
              "description": "Store screenshot in base64 format (default: true)"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Store screenshot of the entire page (default: false)"
            },
            "savePng": {
              "type": "boolean",
              "description": "Save screenshot as PNG file (default: false)"
            },
            "downloadsDir": {
              "type": "string",
              "description": "Custom downloads directory path (default: user's Downloads folder)"
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "playwright_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to click"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to click"
            }
          },
          "required": [
            "iframeSelector",
            "selector"
          ]
        }
      },
      {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "iframeSelector": {
              "type": "string",
              "description": "CSS selector for the iframe containing the element to fill"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for the element to fill"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "iframeSelector",
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_fill",
        "description": "fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "playwright_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      },
      {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options",
        "input_schema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of logs to retrieve (all, error, warning, log, info, debug, exception)",
              "enum": [
                "all",
                "error",
                "warning",
                "log",
                "info",
                "debug",
                "exception"
              ]
            },
            "search": {
              "type": "string",
              "description": "Text to search for in logs (handles text with square brackets)"
            },
            "limit": {
              "type": "number",
              "description": "Maximum number of logs to return"
            },
            "clear": {
              "type": "boolean",
              "description": "Whether to clear logs after retrieval (default: false)"
            }
          },
          "required": []
        }
      },
      {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform GET operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform POST operation"
            },
            "value": {
              "type": "string",
              "description": "Data to post in the body"
            },
            "token": {
              "type": "string",
              "description": "Bearer token for authorization"
            },
            "headers": {
              "type": "object",
              "description": "Additional headers to include in the request",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PUT in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform PUT operation"
            },
            "value": {
              "type": "string",
              "description": "Data to PATCH in the body"
            }
          },
          "required": [
            "url",
            "value"
          ]
        }
      },
      {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to perform DELETE operation"
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique & arbitrary identifier to be used for retrieving this response later with `Playwright_assert_response`."
            },
            "url": {
              "type": "string",
              "description": "URL pattern to match in the response."
            }
          },
          "required": [
            "id",
            "url"
          ]
        }
      },
      {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation.",
        "input_schema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Identifier of the HTTP response initially expected using `Playwright_expect_response`."
            },
            "value": {
              "type": "string",
              "description": "Data to expect in the body of the HTTP response. If provided, the assertion will fail if this value is not found in the response body."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser",
        "input_schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "description": "Custom User Agent for the Playwright browser instance"
            }
          },
          "required": [
            "userAgent"
          ]
        }
      },
      {
        "name": "playwright_drag",
        "description": "Drag an element to a target location",
        "input_schema": {
          "type": "object",
          "properties": {
            "sourceSelector": {
              "type": "string",
              "description": "CSS selector for the element to drag"
            },
            "targetSelector": {
              "type": "string",
              "description": "CSS selector for the target location"
            }
          },
          "required": [
            "sourceSelector",
            "targetSelector"
          ]
        }
      },
      {
        "name": "playwright_press_key",
        "description": "Press a keyboard key",
        "input_schema": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": "Key to press (e.g. 'Enter', 'ArrowDown', 'a')"
            },
            "selector": {
              "type": "string",
              "description": "Optional CSS selector to focus before pressing key"
            }
          },
          "required": [
            "key"
          ]
        }
      },
      {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for the link to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL",
        "input_schema": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "URL to navigate to"
            },
            "launchOptions": {
              "type": "object",
              "description": "PuppeteerJS LaunchOptions. Default null. If changed and not null, browser restarts. Example: { headless: true, args: ['--no-sandbox'] }"
            },
            "allowDangerous": {
              "type": "boolean",
              "description": "Allow dangerous LaunchOptions that reduce security. When false, dangerous args like --no-sandbox will throw errors. Default false."
            }
          },
          "required": [
            "url"
          ]
        }
      },
      {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element",
        "input_schema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name for the screenshot"
            },
            "selector": {
              "type": "string",
              "description": "CSS selector for element to screenshot"
            },
            "width": {
              "type": "number",
              "description": "Width in pixels (default: 800)"
            },
            "height": {
              "type": "number",
              "description": "Height in pixels (default: 600)"
            },
            "encoded": {
              "type": "boolean",
              "description": "If true, capture the screenshot as a base64-encoded data URI (as text) instead of binary image content. Default false."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      {
        "name": "puppeteer_click",
        "description": "Click an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to click"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_fill",
        "description": "Fill out an input field",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for input field"
            },
            "value": {
              "type": "string",
              "description": "Value to fill"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to select"
            },
            "value": {
              "type": "string",
              "description": "Value to select"
            }
          },
          "required": [
            "selector",
            "value"
          ]
        }
      },
      {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page",
        "input_schema": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "CSS selector for element to hover"
            }
          },
          "required": [
            "selector"
          ]
        }
      },
      {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console",
        "input_schema": {
          "type": "object",
          "properties": {
            "script": {
              "type": "string",
              "description": "JavaScript code to execute"
            }
          },
          "required": [
            "script"
          ]
        }
      }
    ],
    "mcp_tools_dict": {
      "playwright": [
        "start_codegen_session",
        "end_codegen_session",
        "get_codegen_session",
        "clear_codegen_session",
        "playwright_navigate",
        "playwright_screenshot",
        "playwright_click",
        "playwright_iframe_click",
        "playwright_iframe_fill",
        "playwright_fill",
        "playwright_select",
        "playwright_hover",
        "playwright_evaluate",
        "playwright_console_logs",
        "playwright_get",
        "playwright_post",
        "playwright_put",
        "playwright_patch",
        "playwright_delete",
        "playwright_expect_response",
        "playwright_assert_response",
        "playwright_custom_user_agent",
        "playwright_drag",
        "playwright_press_key",
        "playwright_click_and_switch_tab"
      ],
      "puppeteer": [
        "puppeteer_navigate",
        "puppeteer_screenshot",
        "puppeteer_click",
        "puppeteer_fill",
        "puppeteer_select",
        "puppeteer_hover",
        "puppeteer_evaluate"
      ]
    },
    "query": "Navigate to the website Taobao using Playwright.",
    "function_call_label": [
      {
        "name": "playwright_navigate",
        "step": "1",
        "id": "1",
        "mcp_server": "playwright",
        "similar_tools": [
          {
            "name": "puppeteer_navigate",
            "mcp_server": "puppeteer"
          }
        ],
        "input": {
          "url": "https://www.taobao.com"
        },
        "output": {
          "status_code": 200,
          "result": {}
        }
      }
    ]
  }
]